#!/bin/bash

declare -r MCPANEL_DIRECTORY=$(dirname $(dirname $0))
declare -r SYSTEM_DATETIME=$(date +'%d%m%Y_%H%M%S')

declare -a MCPANEL_PARAMS=()

if [[ ! -e "${MCPANEL_DIRECTORY}/core/mcpanel.sh" ]]; then
  echo -e "\x1B[31mThe \x1B[33m'mcpanel'\x1B[31m bootstrap library is missing!\x1B[0m"
  exit 1
fi

if [[ ! -e "${MCPANEL_DIRECTORY}/etc/mcpanel.cnf" ]]; then
  echo -e "\x1B[31mThe \x1B[33m'mcpanel'\x1B[31m configuration is missing!\x1B[0m"
  exit 1
fi

if [[ ! -e "${MCPANEL_DIRECTORY}/core/abs.sh" ]]; then
  echo -e "\x1B[31mThe 'Awesome Bash Stylizer' library is missing!\x1B[0m"
  exit 1
fi

if [[ ! -e "${MCPANEL_DIRECTORY}/etc/abs.cnf" ]]; then
  echo -e "\x1B[31mThe 'Awesome Bash Stylizer' configuration is missing!\x1B[0m"
  exit 1
fi

source "${MCPANEL_DIRECTORY}/etc/mcpanel.cnf"
source "${MCPANEL_DIRECTORY}/core/mcpanel.sh"

declare -r MCPANEL_VERSION_MAJOR=2
declare -r MCPANEL_VERSION_MINOR=4
declare -r MCPANEL_VERSION_PATCH=1
declare -r MCPANEL_VERSION_CHANNEL="stable"
declare -r MCPANEL_VERSION="${MCPANEL_VERSION_MAJOR}.${MCPANEL_VERSION_MINOR}.${MCPANEL_VERSION_PATCH}-${MCPANEL_VERSION_CHANNEL}"
declare -r MCPANEL_MODULES=$(ls "${MCPANEL_DIRECTORY}/modules/enabled")

source "${MCPANEL_DIRECTORY}/etc/abs.cnf"
source "${MCPANEL_DIRECTORY}/core/abs.sh"

function mcpanel::main()
{
  local module=$1
  local command=$2

#  MCPANEL_PARAMS=mcpanel::toolbox::parseOptions ${@:3}

  mcpanel::banner

  if [[ "${module}" == "enable-module" ]]; then
    mcpanel::module::enable ${@:2}
    return $?
  fi

  if [[ "${module}" == "disable-module" ]]; then
    mcpanel::module::disable ${@:2}
    return $?
  fi

  if [[ "${module}" == "list-modules" ]]; then
    mcpanel::module::list ${command} # mode: available, enabled
    return $?
  fi

  if [[ -z "${module}" ]]; then
    mcpanel::info
    return $?
  fi

  if [[ ! -e "${MCPANEL_DIRECTORY}/modules/enabled/mcp-${module}.sh" ]] && [[ ! -e "${MCPANEL_DIRECTORY}/modules/available/mcp-${module}.sh" ]]; then
    abs::error "mcpanel: error: module not found: ${STYLE_SUCCESS}${module}"
    return 1
  fi

  if [[ ! -e "${MCPANEL_DIRECTORY}/modules/enabled/mcp-${module}.sh" ]] && [[ -e "${MCPANEL_DIRECTORY}/modules/available/mcp-${module}.sh" ]]; then
    abs::comment "mcpanel: warning: module is available, but not enabled: ${STYLE_SUCCESS}${module}"
    return 1
  fi

  for mod in $(ls ${MCPANEL_DIRECTORY}/modules/enabled/mcp-*); do
    local moduleName=$(basename "${mod}" ".sh")
    local moduleConfig="${MCPANEL_DIRECTORY}/etc/${moduleName}.cnf"

    if [[ -e ${moduleConfig} ]]; then
        source ${moduleConfig}
    fi

    unset moduleConfig
    unset moduleName
  done

  source "${MCPANEL_DIRECTORY}/modules/enabled/mcp-${module}.sh"
  mcpanel::${module}::main "${command}" ${@:2}
  return $?
}

mcpanel::main $@
exit $?
